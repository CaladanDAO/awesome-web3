{
    "calls": [
            "vote_for_gauge_weights(address,uint256)",
            "remove_liquidity_one_coin(uint256,int128,uint256)",
            "withdraw(uint256)",
            "add_liquidity(uint256[2],uint256)",
            "remove_liquidity(uint256,uint256[4])",
            "deposit(uint256)",
            "remove_liquidity(uint256,uint256[2])",
            "add_liquidity(uint256[4],uint256)",
            "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)",
            "exchange(int128,int128,uint256,uint256)",
            "set_admin(address)",
            "remove_liquidity_one_coin(uint256,int128,uint256,bool)",
            "mint(address,uint256)"
    ],
    "events": [
            "VoteForGauge(uint256,address,address,uint256)",
            "UpdateLiquidityLimit(address,uint256,uint256,uint256,uint256)",
            "Withdraw(address,uint256)",
            "NewGauge(address,int128,uint256)",
            "TokenExchangeUnderlying(address,int128,uint256,int128,uint256)",
            "TokenExchange(address,int128,uint256,int128,uint256)",
            "Deposit(address,uint256)",
            "RemoveLiquidityOne(address,uint256,uint256)",
            "RemoveLiquidityImbalance(address,uint256[2],uint256[2],uint256,uint256)",
            "AddLiquidity(address,uint256[2],uint256[2],uint256,uint256)",
            "AddLiquidity(address,uint256[4],uint256[4],uint256,uint256)",
            "RemoveLiquidity(address,uint256[4],uint256[4],uint256)",
            "RemoveLiquidity(address,uint256[2],uint256[2],uint256)",
            "RemoveLiquidityImbalance(address,uint256[4],uint256[4],uint256,uint256)",
            "ExecutionSuccess(bytes32,uint256)"
    ]
}
