{
    "name": "ethereum_metis",
    "names": {
        "0x081d1101855bd523ba69a9794e0217f0db6323ff": "L1CrossDomainMessenger",
        "0x10739f09f6e62689c0aa8a1878816de9e166d6f9": "ChainStorageContainer",
        "0x38473feb3a6366757a249db2ca4fbb2c663416b7": "Metis Andromeda: Chain Storage Container Batches",
        "0x3980c9ed79d2c191a89e02fa3529c60ed6e9c04b": "L1StandardBridge",
        "0x56a76bcc92361f6df8d75476fed8843edc70e1c9": "Metis Andromeda: Canonical Transaction Chain",
        "0x7532c59c69828d4e756832bae27b79fb28145c44": "Metis Andromeda: Deployer",
        "0x810181cd72554ab2a28deae4bead4e503aaf1163": "GnosisSafe140",
        "0x8bf439ef7167023f009e24b21719ca5f768ecb36": "Metis Andromeda: Proxy Implementation",
        "0x918778e825747a892b17c66fe7d24c618262867d": "Lib_AddressManager",
        "0x9e32b13ce7f2e80a01932b42553652e053d6ed8e": "MToken",
        "0x9ed4739afd706122591e75f215208ecf522c0fd3": "Metis Andromeda: MVM Verifier",
        "0xa91ea6f5d1eda8e6686639d6c88b309cf35d2e57": "ChainStorageContainer2",
        "0xc8953ca384b4adc8b1b11b030afe2f05471664b0": "Metis Andromeda: MVM Discount Oracle",
        "0xdd6ffc7d9a4fb420b637747edc6456340d12d377": "Metis Andromeda: Proxy Admin",
        "0xf209815e595cdf3ed0aaf9665b1772e608ab9380": "StateCommitmentChain",
        "0xf3d58d1794f2634d6649a978f2dc093898feebc0": "MVM_L2ChainManagerOnL1",
        "0xf51b9c9a1c12e7e48bec15dc358d0c1f0d7eb3be": "BondManager"
    },
    "contracts": {
        "L1CrossDomainMessenger": {
            "addresses": {
                "1": "0x081d1101855bd523ba69a9794e0217f0db6323ff"
            }
        },
        "ChainStorageContainer": {
            "addresses": {
                "1": "0x10739f09f6e62689c0aa8a1878816de9e166d6f9"
            }
        },
        "Metis Andromeda: Chain Storage Container Batches": {
            "addresses": {
                "1": "0x38473feb3a6366757a249db2ca4fbb2c663416b7"
            }
        },
        "L1StandardBridge": {
            "addresses": {
                "1": "0x3980c9ed79d2c191a89e02fa3529c60ed6e9c04b"
            }
        },
        "Metis Andromeda: Canonical Transaction Chain": {
            "addresses": {
                "1": "0x56a76bcc92361f6df8d75476fed8843edc70e1c9"
            }
        },
        "Metis Andromeda: Deployer": {
            "addresses": {
                "1": "0x7532c59c69828d4e756832bae27b79fb28145c44"
            }
        },
        "GnosisSafe140": {
            "addresses": {
                "1": "0x810181cd72554ab2a28deae4bead4e503aaf1163"
            }
        },
        "Metis Andromeda: Proxy Implementation": {
            "addresses": {
                "1": "0x8bf439ef7167023f009e24b21719ca5f768ecb36"
            }
        },
        "Lib_AddressManager": {
            "addresses": {
                "1": "0x918778e825747a892b17c66fe7d24c618262867d"
            }
        },
        "MToken": {
            "addresses": {
                "1": "0x9e32b13ce7f2e80a01932b42553652e053d6ed8e"
            }
        },
        "Metis Andromeda: MVM Verifier": {
            "addresses": {
                "1": "0x9ed4739afd706122591e75f215208ecf522c0fd3"
            }
        },
        "ChainStorageContainer2": {
            "addresses": {
                "1": "0xa91ea6f5d1eda8e6686639d6c88b309cf35d2e57"
            }
        },
        "Metis Andromeda: MVM Discount Oracle": {
            "addresses": {
                "1": "0xc8953ca384b4adc8b1b11b030afe2f05471664b0"
            }
        },
        "Metis Andromeda: Proxy Admin": {
            "addresses": {
                "1": "0xdd6ffc7d9a4fb420b637747edc6456340d12d377"
            }
        },
        "StateCommitmentChain": {
            "addresses": {
                "1": "0xf209815e595cdf3ed0aaf9665b1772e608ab9380"
            }
        },
        "MVM_L2ChainManagerOnL1": {
            "addresses": {
                "1": "0xf3d58d1794f2634d6649a978f2dc093898feebc0"
            }
        },
        "BondManager": {
            "addresses": {
                "1": "0xf51b9c9a1c12e7e48bec15dc358d0c1f0d7eb3be"
            }
        }
    },
    "projectlogs": [
        [
            "TransactionBatchAppended(uint256,uint256,bytes32,uint256,uint256,bytes)",
            25228
        ],
        [
            "SequencerBatchAppended(uint256,uint256,uint256,uint256)",
            25228
        ],
        [
            "StateBatchAppended(uint256,uint256,bytes32,uint256,uint256,bytes)",
            24803
        ],
        [
            "TransactionEnqueued(uint256,address,address,uint256,bytes,uint256,uint256)",
            18139
        ],
        [
            "SentMessage(address,address,bytes,uint256,uint256,uint256)",
            18139
        ],
        [
            "ERC20ChainID(uint256)",
            14739
        ],
        [
            "ERC20DepositInitiated(address,address,address,address,uint256,bytes)",
            10744
        ],
        [
            "ETHDepositInitiated(address,address,uint256,bytes,uint256)",
            6290
        ],
        [
            "RelayedMessage(bytes32)",
            5525
        ],
        [
            "ERC20WithdrawalFinalized(address,address,address,address,uint256,bytes)",
            3995
        ],
        [
            "ETHWithdrawalFinalized(address,address,uint256,bytes,uint256)",
            1530
        ]
    ],
    "projectcalls": [
        [
            "appendStateBatchByChainId(uint256,bytes32[],uint256,string)",
            24803
        ],
        [
            "depositERC20ToByChainId(uint256,address,address,address,uint256,uint32,bytes)",
            10863
        ],
        [
            "relayMessageViaChainId(uint256,address,address,bytes,uint256,(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]),bytes,bytes))",
            6579
        ],
        [
            "depositETHToByChainId(uint256,address,uint32,bytes)",
            6358
        ],
        [
            "increaseAllowance(address,uint256)",
            170
        ],
        [
            "setOwner(address)",
            17
        ],
        [
            "getOwner()",
            17
        ]
    ],
    "calls": [],
    "events": []
}